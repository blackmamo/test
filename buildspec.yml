version: 0.1
phases:
  install:
    commands:
      - sudo apt-get install unzip
      # TODO is this really safe? someone could hijack their dns and pwn us
      - wget --no-verbose https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
      - unzip terraform_0.11.11_linux_amd64.zip
      - sudo mv terraform /usr/local/bin/
      - rm terraform_0.11.11_linux_amd64.zip
      - terraform --version
      # TODO create a new image that contains terraform to avoid installing every time
      - terraform init
      - npm install -g lerna
  pre_build:
    commands:
      - lerna bootstrap
  build:
    commands:
      - npm run-script build
      - npm run-script test
      - terraform workspace select $CODEBUILD_RESOLVED_SOURCE_VERSION || terraform workspace new $CODEBUILD_RESOLVED_SOURCE_VERSION
      - terraform apply -auto-approve
      # TODO integration tests can often fail if we don't wait here. It seems the IAM roles take time to propogate to the api gateway
      # we should try and determine a method of waiting for them to actually apply, rather than have this (also try reducing from 15)
      - sleep 15
      - npm run-script integration-test
    finally:
      - terraform destroy -auto-approve
      - terraform workspace select default
      - terraform workspace delete $CODEBUILD_RESOLVED_SOURCE_VERSION
  post_build:
    commands:
      # destroy per pr env
      - if [ $CODEBUILD_BUILD_SUCCEEDING ] && [ "`git rev-parse master`" = "$CODEBUILD_RESOLVED_SOURCE_VERSION" ]; then echo "Promoting to QA" && (terraform workspace select qa || terraform workspace new qa) && terraform apply -auto-approve; fi
